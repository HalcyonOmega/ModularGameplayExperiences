// Copyright Chronicler.


#pragma once

#include "NativeGameplayTags.h"

namespace ModularGameplayTags
{
	MODULARGAMEPLAYEXPERIENCES_API	FGameplayTag FindTagByString(const FString& TagString, bool bMatchPartialString = false);

	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_Mouse);
	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_Stick);
	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Crouch);

	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InitState_Spawned);
	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InitState_DataAvailable);
	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InitState_DataInitialized);
	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InitState_GameplayReady);

	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_Reset);
	MODULARGAMEPLAYEXPERIENCES_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_RequestReset);
};
